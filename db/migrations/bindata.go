// Code generated for package migrations by go-bindata DO NOT EDIT. (@generated)
// sources:
// mysql/000001_create_teams.down.sql
// mysql/000001_create_teams.up.sql
// mysql/000002_create_team_members.down.sql
// mysql/000002_create_team_members.up.sql
// postgres/000001_create_teams.down.sql
// postgres/000001_create_teams.up.sql
// postgres/000002_create_team_members.down.sql
// postgres/000002_create_team_members.up.sql
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mysql000001_create_teamsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x91\x4f\x6b\xe3\x30\x14\xc4\xef\xfa\x14\x73\xb3\xbd\x2c\xcb\xee\xd9\x64\xa9\x62\x3f\x13\x81\x6d\x05\x4b\xa6\xb9\x05\x25\x51\x5b\x83\x2d\x9b\x58\xfd\xf3\xf1\x4b\x62\x13\x68\xd2\x4b\x4f\x85\xfa\x60\x04\x9a\xf9\x69\xde\x1b\x45\x1a\x77\xc3\xd1\x0e\xe6\x68\x0f\xca\x1b\x6f\x3b\xeb\x3c\x16\x08\x15\xe5\x94\x68\x88\x2c\x64\x00\x30\xfd\x4f\xdf\x7c\x91\xc8\xba\xd4\xe1\xaf\x08\x59\x25\x0b\x88\x32\x93\x55\xc1\xb5\x90\xe5\x56\x25\x2b\x2a\xf8\x9f\x44\xe6\x75\x51\xaa\x8b\xef\x7e\x45\x15\xc1\x9b\x5d\x6b\xb7\xce\x74\x16\x0b\x04\xda\x9a\x6e\x0c\x2e\x12\x5e\xa6\xb3\x60\xdc\x3f\xd9\xce\x60\x81\x94\x6b\xbe\xe4\x8a\xc2\xe8\x83\x6a\xdf\xb7\xcf\x9d\xbb\x70\x78\xdb\xf6\xaf\x72\xb0\x4e\xb8\x97\xc6\xdb\x89\x18\xe1\x3f\xfe\xfe\x3e\x1f\x03\x9e\x6b\xaa\xa0\xf9\x32\x27\x9c\x1f\x45\x5a\xc9\x35\xa6\x8c\xb8\xb2\x63\xd7\xf7\x6d\x1c\xcc\xd6\x79\xde\x7f\x01\x8b\xa2\x98\xb1\x75\x45\x6b\x5e\x11\x4c\xeb\xed\x51\x3c\xd0\x5b\x33\xfa\x71\x5a\xc2\xed\x22\x63\x46\x1b\x4a\x6a\x7d\x25\x8f\x59\x4a\x3c\xcf\x65\xc2\x35\xe1\x53\x60\xcc\xd8\x0f\xa9\x26\x37\xa3\x3f\xb1\xc4\xbe\x77\xf5\x70\x30\x5f\x6f\xe7\x96\x80\x5d\xf3\xd8\x38\xff\xed\x15\x9d\x53\x4e\xb1\x45\x06\xda\x08\xa5\xd5\x34\x40\xcc\xde\x03\x00\x00\xff\xff\x34\x9f\x75\x03\x5a\x03\x00\x00")

func mysql000001_create_teamsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000001_create_teamsDownSql,
		"mysql/000001_create_teams.down.sql",
	)
}

func mysql000001_create_teamsDownSql() (*asset, error) {
	bytes, err := mysql000001_create_teamsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000001_create_teams.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql000001_create_teamsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xd1\x6f\x9b\x3e\x10\xc7\xdf\xf9\x2b\xee\x2d\xf0\xd3\x4f\x53\x9b\xb5\x55\xa5\x28\xd3\x5c\xb8\xac\xd6\x88\xc9\xc0\x68\xed\x53\xe4\x80\xbb\x5a\x02\x83\xc0\xe9\xd2\xff\x7e\x8a\x21\xac\x6b\xd8\x16\xed\x65\xd2\x5e\x90\xf0\x7d\x7c\xba\xbb\xef\xd7\xe7\xc7\x48\x38\x02\x27\x37\x21\x02\x5d\x00\x8b\x38\xe0\x1d\x4d\x78\x02\x5c\x8a\xb2\x05\xd7\x01\x00\xa0\x39\x3c\x89\x26\x7b\x14\x8d\x3b\xbd\xf2\x2c\xc5\xd2\x30\xfc\xdf\x06\xfd\x46\x0a\x23\x89\x81\x8d\xfa\xa2\xb4\x71\xa7\x67\x1e\x04\xb8\x20\x69\xf8\x92\x4a\xeb\xfc\x04\x2a\x90\x85\x3c\x81\x52\x6d\x5d\x88\x67\x26\x4a\x39\xd4\x75\x75\x31\x46\x9e\x80\x04\xb2\xcd\x1a\x55\x1b\x55\xe9\xef\x4d\x5e\x5e\x8e\xa1\x58\x0a\x55\x0c\xd0\xf9\xf4\x7a\x0c\xe2\xcf\xb5\xfc\x5d\x22\xbf\x2a\x6b\xa1\x4f\x69\x80\x14\x45\xf5\x55\xe6\x41\x55\x0a\xa5\x5b\x30\x72\x67\xba\x00\xd5\x4f\xca\xc8\x17\xc2\xbc\x9d\x8e\xdd\x4f\xb2\x47\x59\xca\x57\xfa\x1d\x63\xab\x98\x2e\x49\x7c\x0f\x1f\xf1\x1e\x5c\x9a\x7b\xbd\x66\x8c\x7e\x4a\xd1\x1e\xda\x52\xdd\xfd\xb7\x8f\xed\x0f\x55\xbe\x5b\x9b\xbd\x4d\xd6\xfa\xd7\x61\x65\x8b\x5d\xab\x1c\xdc\x43\xdd\xa3\xdc\xd6\x9a\x64\x2d\x0c\xb8\x07\xbf\x8c\x72\x99\xb5\x9c\xe5\x0e\xee\x1b\xe5\x72\x6b\x27\xcb\x1d\x9c\x35\xca\xb5\x76\x4a\xb6\xbe\xc3\xc0\x3c\xc7\x03\x64\x1f\x28\xc3\x39\xd5\xba\x0a\x6e\x86\xa9\xf9\xb7\x24\x4e\x90\xcf\xb7\xe6\xe1\xba\xdc\x5c\xcc\x1c\x27\x41\x0e\xef\xeb\x46\xd6\xa2\x91\x79\x62\x84\x91\xa5\xd4\x06\xe6\xe0\x26\x18\xa2\xcf\x81\x2e\xba\x77\xd4\x7d\xad\x2e\x5d\xc0\x8f\x52\xc6\xdd\xff\x3c\x58\xc4\xd1\x12\x28\x5b\x44\xf1\x92\x70\x1a\xb1\x75\xe2\xdf\xe2\x92\xbc\xf1\xa3\x30\x5d\xb2\x64\xb8\xf7\xf9\x16\x63\x04\x23\x36\x85\xec\x86\x3e\x87\x89\x7d\xa9\x93\x01\x21\x2c\xe8\x01\xdb\x96\x80\x39\x04\x84\x93\x1b\x92\xa0\xeb\xfd\x40\x65\x55\xb1\x2d\xf5\x90\xc7\x7a\x2d\xaa\xa5\xee\x34\xea\x32\x7a\xf0\x0e\xce\xba\x99\x4d\xfa\xa2\xcf\x27\xfd\x3f\x09\x39\xc6\xfd\xf2\xe8\xd6\x05\x09\x02\x78\x95\x06\x36\x55\x55\xcc\x26\x8e\xe7\xcd\x1c\x67\x15\xe3\x8a\xc4\x08\xa2\x30\xb2\xa1\x0f\xac\x32\xb8\x53\xad\x69\xbb\xfe\x8f\x67\x38\x73\xf0\x0e\xfd\x94\x1f\xdf\x98\x39\x01\x92\x30\x8c\xfc\xfd\xfe\xfa\x59\xda\x7f\x47\x9b\x50\xb4\x66\x9f\x8b\x66\x95\xee\x9e\xc6\x9f\xca\x73\x9c\xa9\x5f\xb6\x7f\x4d\xa3\x6f\x01\x00\x00\xff\xff\xc7\x82\x0a\x47\x85\x06\x00\x00")

func mysql000001_create_teamsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000001_create_teamsUpSql,
		"mysql/000001_create_teams.up.sql",
	)
}

func mysql000001_create_teamsUpSql() (*asset, error) {
	bytes, err := mysql000001_create_teamsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000001_create_teams.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql000002_create_team_membersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x93\xc1\x4b\xc3\x30\x14\xc6\xef\xf9\x2b\xde\xad\xad\x0c\xd1\x73\x99\x98\xb5\xaf\xae\xd0\x36\x23\x49\x71\xb7\x91\x6d\x4f\x1c\x2c\x75\x34\x19\xf8\xe7\xcb\xda\x32\xa7\xf3\xd6\x83\x20\xf6\x50\x02\xf9\xbe\x2f\x5f\xde\x8f\x28\xd4\xf0\x78\x68\xe9\x60\x5a\xda\x2a\x6f\x3c\x59\x6a\x3c\x4c\x21\x54\x58\x60\xa2\x21\xcf\x42\x06\x00\xd0\xff\x4f\xdf\xb0\x91\x88\xba\xd2\xe1\x4d\x04\x99\x14\x25\xe4\x55\x26\x64\xc9\x75\x2e\xaa\x95\x4a\xe6\x58\xf2\xdb\x44\x14\x75\x59\xa9\xb3\xef\x79\x8e\x12\xc1\x9b\xf5\x9e\x56\x8d\xb1\x04\x53\x08\x34\x19\x5b\x92\x5d\x53\xeb\x82\xb3\x90\x57\xe9\x20\x73\x9b\x57\xb2\x06\xa6\x90\x72\xcd\x67\x5c\x61\x18\x7d\x51\x6d\xde\xf6\x47\xdb\x9c\xd3\xd4\x49\x4e\xb5\xa3\xb6\x0f\x8b\xe0\x01\xee\x26\xdd\x32\xe0\x85\x46\x09\x9a\xcf\x0a\x84\x8b\x53\x21\x95\x62\x01\x7d\x55\xf8\xf4\xc7\xc1\x60\x1b\x2e\x7b\x1f\xb0\x28\x8a\x19\x5b\x48\x5c\x70\x89\x60\xf6\x9e\xda\xfc\x05\xdf\x77\xce\xbb\x7e\x02\xd7\x53\x8c\x19\x2e\x31\xa9\xf5\x37\x79\xcc\x52\xe4\x45\x21\x12\xae\x11\x7e\x0c\x8c\x19\xfb\x83\x5c\xf8\xd6\xee\x9a\x31\x60\xba\x80\x6b\x32\x93\x7f\x34\x63\xd1\x3c\x1d\xc9\xf9\x31\x68\xba\x80\x5f\x7f\x34\xac\x2b\xd6\xf7\xcd\x33\xc0\x65\xae\xb4\xba\x6c\x1e\xb3\x8f\x00\x00\x00\xff\xff\xea\x93\xe2\x6e\xf0\x04\x00\x00")

func mysql000002_create_team_membersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000002_create_team_membersDownSql,
		"mysql/000002_create_team_members.down.sql",
	)
}

func mysql000002_create_team_membersDownSql() (*asset, error) {
	bytes, err := mysql000002_create_team_membersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000002_create_team_members.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql000002_create_team_membersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x92\x5f\x6b\xdb\x30\x14\xc5\xdf\xfd\x29\xee\x5b\xac\x51\x46\x57\x42\x19\x84\x8c\x29\xf6\x4d\x23\x66\xcb\x41\x92\x59\xfb\x64\x94\xf8\x76\x35\x58\x4e\xb1\x95\xd1\x7d\xfb\xe1\x3f\xcd\x3a\xca\xba\x97\x0e\xc6\x98\x1f\x8c\xad\xfb\xbb\x47\x97\x73\x6e\xa4\x90\x1b\x04\xc3\x57\x09\x82\x58\x83\xcc\x0c\xe0\xb5\xd0\x46\x83\x21\xeb\x52\x72\x3b\x6a\x3b\x08\x03\x00\x18\x4e\x44\x09\x5f\x6d\xbb\xbf\xb3\x6d\x78\x71\xc9\x06\x5e\xe6\x49\x72\x36\x00\x79\x47\xed\x8b\x80\x3a\xd4\xd4\x9d\xea\x97\x73\x36\x1e\xc7\x54\x93\x27\xee\x61\x57\x7d\xa9\x1a\x1f\x5e\x9c\x4f\x85\xad\x12\x29\x57\x37\xf0\x09\x6f\x20\x1c\xaf\x3f\x9b\x6e\x99\x88\xbe\x52\x95\x0f\x85\x27\xeb\xdc\x38\xed\xf0\x5d\x54\xe5\x63\xc7\x0b\xe4\xb1\xa3\x76\x20\x7f\xab\x59\x0e\x23\x16\xd6\x43\xf8\x38\x2d\x0b\x18\xa0\xbc\x12\x12\x97\xa2\x69\x0e\xf1\x0a\x62\x5c\xf3\x3c\x31\x10\x6d\xb8\xd2\x68\x96\x47\x7f\xfb\xde\xed\xe6\x8b\x20\xd0\x68\xe0\xe3\x7d\x4b\xf7\xb6\xa5\x52\x7b\xeb\xc9\x51\xe3\x61\x09\xa1\xc6\x04\x23\x03\x62\x3d\x7a\x3c\xbe\xfb\x67\x2a\x44\x59\x2e\x4d\xf8\x86\xc1\x5a\x65\x29\x08\xb9\xce\x54\xca\x8d\xc8\x64\xa1\xa3\x0d\xa6\xfc\x6d\x94\x25\x79\x2a\xf5\xa9\xef\xf3\x06\x15\x82\xb7\xbb\x9a\x8a\xc6\x3a\x82\x25\xcc\x9e\x64\x39\x3b\x81\x5c\xc6\x13\xd6\xed\xef\xc8\x59\x58\x42\xcc\x0d\x5f\x71\x8d\x21\xfb\x89\xda\x1f\xea\xa3\x6b\x4e\x6a\xba\xc7\xa9\xb7\x6c\x14\x63\xf0\x01\xce\x47\xeb\x66\xd3\xd4\xef\x66\xd3\x3f\x4f\x0c\xaa\x69\xbf\x9e\x6e\x14\x8f\x63\xf8\xa1\x03\xbe\x6a\xbe\xf5\xc9\xcf\xd9\x62\x16\x30\xb6\x08\x82\xad\xc2\x2d\x57\x08\xb6\xf6\xd4\x8a\x5b\x79\xf0\xf8\x50\x75\xbe\x1b\x7d\x78\xee\xe5\x22\xc0\x6b\x8c\x72\xf3\xbc\x63\x11\xc4\xc8\x93\x24\x8b\xfa\x4d\xff\x95\xec\xbf\x99\x11\x2f\x5d\xd5\xbc\x46\x48\x83\xd0\xff\x94\xfe\x4c\x4a\x57\x47\xea\xfc\x6b\xa4\x34\x08\xfd\x0d\x29\x7d\x0f\x00\x00\xff\xff\x26\x13\x23\x6b\x57\x06\x00\x00")

func mysql000002_create_team_membersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000002_create_team_membersUpSql,
		"mysql/000002_create_team_members.up.sql",
	)
}

func mysql000002_create_team_membersUpSql() (*asset, error) {
	bytes, err := mysql000002_create_team_membersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000002_create_team_members.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000001_create_teamsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\xcb\xaa\x83\x30\x10\xc6\xf1\xbd\x4f\x31\xef\xe1\xca\x73\x4c\x41\xb0\x5a\x34\x05\x77\x61\x30\x03\x0d\xe4\x22\x4d\x7a\x79\xfc\x92\x0e\xa5\xdd\x88\xee\x7f\x7c\xff\x61\xaa\x56\x8a\x01\x64\xf5\xd7\x0a\x48\x84\x2e\x16\xf5\xd0\x9f\xe0\xbf\x6f\xcf\xc7\x0e\x9a\x03\x88\xa9\x19\xe5\x08\x68\x6d\x78\x84\x85\xbc\xf1\x77\x93\xa8\x5c\x61\x16\x63\xca\x33\x66\x0e\xfe\xb6\x68\xcc\x92\x69\xd3\xd5\x62\xfa\x91\x46\x3f\xd5\x3b\xa8\x3c\xba\xcf\xde\x3a\xe2\xac\x32\x7a\x53\x72\x56\x61\xda\x94\xf3\x95\x76\x4a\x4d\x96\xf6\xc9\x38\x5f\xc8\xf1\x9d\x4c\xf9\xb5\x5f\x2a\x33\x2b\x8b\x57\x00\x00\x00\xff\xff\x58\xd0\x0f\xa9\x78\x01\x00\x00")

func postgres000001_create_teamsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000001_create_teamsDownSql,
		"postgres/000001_create_teams.down.sql",
	)
}

func postgres000001_create_teamsDownSql() (*asset, error) {
	bytes, err := postgres000001_create_teamsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000001_create_teams.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000001_create_teamsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\xcd\x6e\xea\x30\x10\x85\xf7\x79\x8a\x59\x12\xe9\x2e\xb8\xb4\xa0\x4a\x59\xa5\xe0\xaa\x51\x21\xb4\x21\x54\xb0\x8a\x4c\x3c\x6a\x47\x72\xec\x88\xb8\x3f\xbc\x7d\x45\xec\x00\x01\x2a\xa5\xdb\x73\xc6\xdf\x8c\xe6\x8c\xc7\x09\x0b\x53\x06\x69\x78\x3f\x65\x10\x3d\x40\x3c\x4f\x81\xad\xa2\x45\xba\x00\x83\xbc\xa8\xa0\xe7\x01\x00\x90\x80\xd7\x30\x19\x3f\x86\x49\x6f\x30\xf2\xe1\x39\x89\x66\x61\xb2\x86\x27\xb6\xfe\x57\xfb\xf9\x16\xb9\x41\x6e\x60\x43\x6f\xa4\x8c\x15\x3f\x4a\x71\x29\x0a\x94\x78\x29\x52\x55\x4a\xbe\x53\xbc\xc0\x43\x9f\xd1\xad\x6f\xcd\xeb\xaa\xc0\x2a\xdf\x52\x69\x48\xab\xe3\x68\xc3\xa1\x73\xb1\xe0\x24\x0f\xfa\xff\xc1\x9d\xd3\xcd\xae\xc4\x2b\xe5\xb9\x2e\x4a\xae\x7e\xe9\xcf\xa5\xd4\x5f\x28\x84\x2e\x38\xa9\xea\x08\xed\xf7\xfb\xae\x82\xd4\x27\x19\x3c\xd9\xd1\xcd\xc0\x39\x55\xfe\x8e\x05\xb6\xb7\x67\x9d\x65\x1c\xbd\x2c\x59\x6f\xdf\xd2\xf7\xfc\xc0\xf3\x5c\x12\x51\x3c\x61\xab\xb3\x24\x48\x7c\x67\x75\x1a\x59\x3d\xe1\x3c\x6e\xb2\xa9\x5f\x43\xd0\xed\xad\x9d\x32\x23\x71\x02\x68\x26\xf7\x3b\x32\x6c\xa4\x19\x37\x27\x8c\x26\xe6\xae\x0c\x7b\x2b\x6d\x46\x73\x3f\x5d\x19\xf6\x8a\xda\x8c\xe6\xb2\xba\x32\x6c\x36\xed\x7d\x34\x79\xed\x03\x09\xa7\x29\x4b\xdc\xcf\xb0\x76\x38\x99\xc0\x78\x3e\x5d\xce\xe2\x33\x68\x7d\x22\xba\x44\x65\xf7\x09\x1b\xad\x25\x72\x15\xfc\x85\x21\x79\x65\xf6\x25\x94\x6b\x65\x57\xea\xbe\x48\xe0\xfd\x04\x00\x00\xff\xff\x41\x35\xda\xce\xa5\x03\x00\x00")

func postgres000001_create_teamsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000001_create_teamsUpSql,
		"postgres/000001_create_teams.up.sql",
	)
}

func postgres000001_create_teamsUpSql() (*asset, error) {
	bytes, err := postgres000001_create_teamsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000001_create_teams.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000002_create_team_membersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x49\x4d\xcc\xcd\x4d\xcd\x4d\x4a\x2d\x2a\xe6\x72\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x4e\xce\x48\xcd\x4d\x2d\x2d\x4e\x2d\xb2\xc6\xab\x22\x31\x25\x37\x33\x0f\xbf\x92\xf4\xd2\xd4\xe2\x12\x6b\x2e\x88\x1a\x4f\x3f\x17\xd7\x08\x24\x25\x99\x29\x15\xf1\x48\xae\x01\xb3\xe3\x33\x53\xac\x89\x53\x0d\x72\x1f\xf1\xaa\x53\x52\x73\x52\x4b\x52\xe3\x13\xe1\x8e\x81\x04\x06\x42\x43\x48\x6a\x62\xae\x2f\x44\xb1\x35\x17\x20\x00\x00\xff\xff\x07\x81\x7f\xff\x30\x01\x00\x00")

func postgres000002_create_team_membersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000002_create_team_membersDownSql,
		"postgres/000002_create_team_members.down.sql",
	)
}

func postgres000002_create_team_membersDownSql() (*asset, error) {
	bytes, err := postgres000002_create_team_membersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000002_create_team_members.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000002_create_team_membersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x41\x6b\x83\x30\x14\xc7\xef\x7e\x8a\x77\x34\xd0\xd3\x18\xbd\x78\xca\x34\x63\xb2\x18\x47\x9a\x8e\xf6\x24\x71\x79\x74\x01\xa3\x60\x52\xd8\xc7\x1f\x1a\xbb\x95\x6e\x0c\xba\xde\xe4\xf9\xf8\xfd\x7f\xff\xbc\x5c\x32\xaa\x18\x28\xfa\xc0\x19\x94\x8f\x20\x6a\x05\x6c\x57\x6e\xd4\x06\x02\x6a\xe7\xd0\xb5\x38\x7a\x48\x13\x00\x98\x27\xd6\xc0\x2b\x95\xf9\x13\x95\xe9\xdd\x9a\xcc\xfb\x62\xcb\xf9\x6a\x5e\x38\x7a\x1c\xff\x5c\x18\x87\x0e\xfd\xd7\xff\xf5\x3d\x89\x63\x83\x1d\x06\xd4\x01\x5a\x7b\xb0\x7d\x88\xc3\x17\x59\x56\x54\xee\xe1\x99\xed\x21\x8d\xd1\xab\x25\x81\x24\x24\x4b\x92\xc5\xbd\x14\x05\xdb\x5d\xb8\x5b\xf3\xd1\x9c\xf9\xcf\xdf\x8d\x35\x50\x0b\x50\xa8\x5d\x75\xaa\x15\xb1\x24\xbb\x86\x35\x29\xfc\xc6\x5a\xd4\xae\x62\xc5\xe2\x8d\x0e\x3f\x68\xa7\x27\x99\x8a\x52\xae\x98\x5c\x6e\x74\x7e\x15\x5a\x14\x90\xd7\x7c\x5b\x89\x8b\x18\xff\xf6\x8e\x0e\x27\x21\x68\x87\xa1\x43\xdd\x67\xff\x85\x68\xe3\x6c\x7f\x33\xe5\x70\x44\x1f\xbe\x29\x9f\x01\x00\x00\xff\xff\x9b\x2f\xd3\x07\x76\x02\x00\x00")

func postgres000002_create_team_membersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000002_create_team_membersUpSql,
		"postgres/000002_create_team_members.up.sql",
	)
}

func postgres000002_create_team_membersUpSql() (*asset, error) {
	bytes, err := postgres000002_create_team_membersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000002_create_team_members.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"mysql/000001_create_teams.down.sql":           mysql000001_create_teamsDownSql,
	"mysql/000001_create_teams.up.sql":             mysql000001_create_teamsUpSql,
	"mysql/000002_create_team_members.down.sql":    mysql000002_create_team_membersDownSql,
	"mysql/000002_create_team_members.up.sql":      mysql000002_create_team_membersUpSql,
	"postgres/000001_create_teams.down.sql":        postgres000001_create_teamsDownSql,
	"postgres/000001_create_teams.up.sql":          postgres000001_create_teamsUpSql,
	"postgres/000002_create_team_members.down.sql": postgres000002_create_team_membersDownSql,
	"postgres/000002_create_team_members.up.sql":   postgres000002_create_team_membersUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"mysql": &bintree{nil, map[string]*bintree{
		"000001_create_teams.down.sql":        &bintree{mysql000001_create_teamsDownSql, map[string]*bintree{}},
		"000001_create_teams.up.sql":          &bintree{mysql000001_create_teamsUpSql, map[string]*bintree{}},
		"000002_create_team_members.down.sql": &bintree{mysql000002_create_team_membersDownSql, map[string]*bintree{}},
		"000002_create_team_members.up.sql":   &bintree{mysql000002_create_team_membersUpSql, map[string]*bintree{}},
	}},
	"postgres": &bintree{nil, map[string]*bintree{
		"000001_create_teams.down.sql":        &bintree{postgres000001_create_teamsDownSql, map[string]*bintree{}},
		"000001_create_teams.up.sql":          &bintree{postgres000001_create_teamsUpSql, map[string]*bintree{}},
		"000002_create_team_members.down.sql": &bintree{postgres000002_create_team_membersDownSql, map[string]*bintree{}},
		"000002_create_team_members.up.sql":   &bintree{postgres000002_create_team_membersUpSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
